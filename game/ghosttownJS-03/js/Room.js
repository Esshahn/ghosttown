// Generated by CoffeeScript 1.8.0

/*
  
  Room class
  contains all information about the room currently displayed
 */
var Room,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Room = (function() {
  function Room() {
    this.screen_data = [];
    this.room_number = 1;
    this.room_info;
    this.room_updated_tiles = [];
  }

  Room.prototype.set = function(room_number, player_entry_pos) {
    this.room_number = room_number;
    if (player_entry_pos == null) {
      player_entry_pos = "forward";
    }
    this.screen_data = clone(all_levels.screen_data[this.room_number]);
    this.room_info = all_levels.level_data[this.room_number];
    if (player_entry_pos === "forward") {
      player.position = this.room_info.playerpos1;
    }
    if (player_entry_pos === "back") {
      player.position = this.room_info.playerpos2;
    }
    return this.update(player.position);
  };

  Room.prototype.update = function(position) {
    var msg;
    if (position == null) {
      position = player.get_position();
    }
    this.screen_data = clone(all_levels.screen_data[this.room_number]);
    this.insert_player(position);
    display.show_level();
    msg = 'Room ' + this.room_number + ' "' + this.room_info.name + '"';
    msg += '<br>Inventory: ' + this.room_info.objects;
    return ui_room(msg);
  };

  Room.prototype.get = function(room_number) {
    return this.screen_data;
  };

  Room.prototype.insert_player = function(position) {
    if (position == null) {
      position = this.room_info.playerpos1;
    }
    this.screen_data[position + 0 * 40 + 0] = "93";
    this.screen_data[position + 0 * 40 + 1] = "94";
    this.screen_data[position + 0 * 40 + 2] = "95";
    this.screen_data[position + 1 * 40 + 0] = "96";
    this.screen_data[position + 1 * 40 + 1] = "97";
    this.screen_data[position + 1 * 40 + 2] = "98";
    this.screen_data[position + 2 * 40 + 0] = "99";
    this.screen_data[position + 2 * 40 + 1] = "9a";
    return this.screen_data[position + 2 * 40 + 2] = "9b";
  };

  Room.prototype.replace = function(tile, tile_code) {
    if (typeof tile === "string") {
      tile = this.find(tile);
    }
    all_levels.screen_data[this.room_number][tile] = tile_code;
    return this.update(player.get_position());
  };

  Room.prototype.find = function(tile) {
    if (__indexOf.call(this.screen_data, tile) >= 0) {
      return this.screen_data.indexOf(tile);
    }
  };

  Room.prototype.check_room = function(direction) {
    var new_position_tiles, new_room;
    new_position_tiles = [];
    if (direction === KEY.LEFT) {
      new_position_tiles = [this.screen_data[player.position + 0 * 40 - 1], this.screen_data[player.position + 1 * 40 - 1], this.screen_data[player.position + 2 * 40 - 1]];
    }
    if (direction === KEY.RIGHT) {
      new_position_tiles = [this.screen_data[player.position + 0 * 40 + 3], this.screen_data[player.position + 1 * 40 + 3], this.screen_data[player.position + 2 * 40 + 3]];
    }
    if (direction === KEY.UP) {
      new_position_tiles = [this.screen_data[player.position - 1 * 40 + 0], this.screen_data[player.position - 1 * 40 + 1], this.screen_data[player.position - 1 * 40 + 2]];
    }
    if (direction === KEY.DOWN) {
      new_position_tiles = [this.screen_data[player.position + 3 * 40 + 0], this.screen_data[player.position + 3 * 40 + 1], this.screen_data[player.position + 3 * 40 + 2]];
    }
    if (new_position_tiles[0] === "df" && new_position_tiles[1] === "df" && new_position_tiles[2] === "df") {
      return true;
    }
    if ("05" && "08" && __indexOf.call(new_position_tiles, "0b") >= 0) {
      new_room = this.room_number - 1;
      this.set(new_room, "back");
    }
    if ("03" && "06" && __indexOf.call(new_position_tiles, "09") >= 0) {
      new_room = this.room_number + 1;
      this.set(new_room, "forward");
    }
    if (__indexOf.call(new_position_tiles, "a9") >= 0) {
      player.inventory.push("gloves");
      ui_inventory(player.inventory);
      this.replace("a9", "6b");
    }
    ui_room("Tiles: " + new_position_tiles[0] + " | " + new_position_tiles[1] + " | " + new_position_tiles[2]);
    return false;
  };

  return Room;

})();

//# sourceMappingURL=Room.js.map
