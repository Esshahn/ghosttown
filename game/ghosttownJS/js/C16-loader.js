// Generated by CoffeeScript 1.10.0
var C16Loader, Cursor;

C16Loader = (function() {
  function C16Loader() {
    this.image_kingsoft = new PIXI.Sprite.fromImage('img/kingsoft.png');
    this.image_credits = new PIXI.Sprite.fromImage('img/credits.png');
    this.image_boot = new PIXI.Sprite.fromImage('img/boot.png');
    this.display_boot();
    this.cover_screen(5, 25);
    this.reveal_line(5, 8, 100, true, (function(_this) {
      return function() {
        return _this.display_kingsoft();
      };
    })(this));
    this.cursor = new Cursor();
  }

  C16Loader.prototype.cover_screen = function(start, end, color) {
    var i, results;
    this.start = start;
    this.end = end;
    this.color = color != null ? color : COLOR_BOOT_GREY;
    this.empty_line = [];
    i = this.start;
    results = [];
    while (i < this.end) {
      this.empty_line[i] = new PIXI.Graphics;
      this.empty_line[i].beginFill(this.color);
      this.empty_line[i].drawRect(0, 0, 320, 8);
      this.empty_line[i].endFill();
      this.empty_line[i].position.y = i * 8;
      display.addElement(this.empty_line[i]);
      results.push(i++);
    }
    return results;
  };

  C16Loader.prototype.reveal_line = function(line, amountOfCharacters, speed, showCursor, callback) {
    this.line = line;
    this.amountOfCharacters = amountOfCharacters != null ? amountOfCharacters : 40;
    this.speed = speed != null ? speed : 100;
    this.showCursor = showCursor != null ? showCursor : true;
    return this.line_interval = setInterval(((function(_this) {
      return function() {
        if (_this.empty_line[_this.line].position.x / 8 < _this.amountOfCharacters) {
          console.log(_this.empty_line[_this.line].position.x);
          _this.empty_line[_this.line].position.x += 8;
          if (_this.showCursor) {
            return _this.cursor.set_position(_this.empty_line[_this.line].position.x / 8, _this.line);
          }
        } else {
          clearInterval(_this.line_interval);
          console.log(callback);
          return callback();
        }
      };
    })(this)), 100);
  };

  C16Loader.prototype.display_kingsoft = function() {
    console.log(this);
    display.change_screen_colors("full", COLOR_BLUE, COLOR_BLUE);
    display.clear();
    return display.addElement(this.image_kingsoft);
  };

  C16Loader.prototype.display_credits = function() {
    display.change_screen_colors("full", COLOR_BLACK, COLOR_BLACK);
    display.clear();
    return display.addElement(this.image_credits);
  };

  C16Loader.prototype.display_boot = function() {
    display.change_screen_colors("full", COLOR_BOOT_PURPLE, COLOR_BOOT_GREY);
    display.clear();
    return display.addElement(this.image_boot);
  };

  return C16Loader;

})();

Cursor = (function() {
  function Cursor() {
    this.position_x = 0;
    this.position_y = 5;
    this.cursor = new PIXI.Graphics;
    this.cursor.beginFill(COLOR_BLACK);
    this.cursor.drawRect(0, 0, 8, 8);
    this.cursor.endFill();
    this.cursor.position.x = this.position_x * 8;
    this.cursor.position.y = this.position_y * 8;
    this.cursor_interval = setInterval(((function(_this) {
      return function() {
        return _this.cursor.visible = 1 - _this.cursor.visible;
      };
    })(this)), 322);
    display.addElement(this.cursor);
  }

  Cursor.prototype.set_position = function(x, y) {
    this.cursor.position.x = x * 8;
    return this.cursor.position.y = y * 8;
  };

  Cursor.prototype.destroy_cursor = function() {
    clearInterval(this.cursor_interval);
    return display.removeElement(this.cursor);
  };

  return Cursor;

})();

//# sourceMappingURL=C16-loader.js.map
