// Generated by CoffeeScript 1.10.0

/*
  
  Player
 */
var Player,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Player = (function() {
  function Player() {
    this.position;
    this.inventory = [];
  }

  Player.prototype.get_position = function() {
    return this.position;
  };

  Player.prototype.set_position = function(direction) {
    if (room.playround_data.gamestate === "game") {
      if (direction === KEY.LEFT && room.check_room(KEY.LEFT)) {
        this.position -= 1;
        room.update(this.position);
      }
      if (direction === KEY.RIGHT && room.check_room(KEY.RIGHT)) {
        this.position += 1;
        room.update(this.position);
      }
      if (direction === KEY.UP && room.check_room(KEY.UP)) {
        this.position -= 40;
        room.update(this.position);
      }
      if (direction === KEY.DOWN && room.check_room(KEY.DOWN)) {
        this.position += 40;
        return room.update(this.position);
      }
    }
  };

  Player.prototype.add = function(item) {
    if (indexOf.call(this.inventory, item) < 0) {
      this.inventory.push(item);
      ui_inventory(this.inventory);
      return ui_log("You picked up a <b>" + item + "</b>", "green");
    }
  };

  Player.prototype.remove = function(item) {
    if (indexOf.call(this.inventory, item) >= 0) {
      this.inventory.splice(this.inventory.indexOf(item), 1);
      ui_inventory(this.inventory);
      return ui_log("You dropped the <b>" + item + "</b>", "green");
    }
  };

  Player.prototype.reset = function() {
    this.inventory = [];
    return ui_inventory(this.inventory);
  };

  return Player;

})();

//# sourceMappingURL=Player.js.map
